{"version":3,"file":"container.js","sourceRoot":"","sources":["../../../src/service/container.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,SAAS;IAClB;;;;;;;OAOG;IACI,MAAM,CAAc,MAAyC,EAAE,KAAQ,EAAE,GAAiB,EAAE,WAA6B;QAC5H,4BAA4B;QAC5B,IAAI,WAAW,EAAE;YACb,qCAAqC;YACrC,OAAO,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAA;SAC1D;QAED,mBAAmB;QACnB,OAAO,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;IAC9C,CAAC;IAED;;;;;;;OAOG;IACI,GAAG,CAAc,MAAyC,EAAE,GAAiB,EAAE,WAA6B;QAC/G,2BAA2B;QAC3B,IAAI,WAAW,EAAE;YACb,kCAAkC;YAClC,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,WAAW,CAAC,CAAA;SACvD;QAED,iBAAiB;QACjB,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;IAC3C,CAAC;CACJ;AAtCD,8BAsCC","sourcesContent":["import { Constructable, MetadataKeys } from '../utils/types'\r\n\r\n/**\r\n * The Container service is wrapping all application's operation.\r\n */\r\nexport class Container {\r\n    /**\r\n     * Define a unique metadata value.\r\n     *\r\n     * @param target The target object on which to define metadata.\r\n     * @param value A value that contains attached metadata.\r\n     * @param key A key used to store and retrieve metadata.\r\n     * @param propertyKey The property key for the target.\r\n     */\r\n    public define<T = unknown>(Target: Constructable | Function | Object, value: T, key: MetadataKeys, propertyKey?: string | symbol): void {\r\n        // If propertyKey  is given.\r\n        if (propertyKey) {\r\n            // Define metadata with propertyKey .\r\n            Reflect.defineMetadata(key, value, Target, propertyKey)\r\n        }\r\n\r\n        // Define metadata.\r\n        Reflect.defineMetadata(key, value, Target)\r\n    }\r\n\r\n    /**\r\n     * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n     *\r\n     * @param target The target object on which the metadata is defined.\r\n     * @param key A key used to store and retrieve metadata.\r\n     * @param propertyKey The property key for the target.\r\n     * @returns The metadata value for the metadata key if found; otherwise, undefined.\r\n     */\r\n    public get<T = unknown>(Target: Constructable | Function | Object, key: MetadataKeys, propertyKey?: string | symbol): T {\r\n        // if propertyKey is given.\r\n        if (propertyKey) {\r\n            // Gets metadata with propertyKey.\r\n            return Reflect.getMetadata(key, Target, propertyKey)\r\n        }\r\n\r\n        // Gets metadata.\r\n        return Reflect.getMetadata(key, Target)\r\n    }\r\n}\r\n"]}